@model IEnumerable<Events.Model.Event>

@{
    ViewBag.Title = "All events";
}

<h2>All events</h2>

<p>
    @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-default" })
</p>
<table class="table table-striped table-hover table-bordered">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CreatedOn)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.StartTime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.NumberOfTeams)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TeamMembersCapacity)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TypeOfMatchAssemble)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Teams)
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedOn)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StartTime)
            </td>
            <th>
                @Html.DisplayFor(modelItem => item.NumberOfTeams)
            </th>
            <th>
                @Html.DisplayFor(modelItem => item.TeamMembersCapacity)
            </th>
            
            <td>
                @Html.DisplayFor(modelItem => item.TypeOfMatchAssemble)
            </td>
            <td>
                <ul>
                    @foreach (var team in item.Teams)
                    {
                        <li>
                            @team.Name
                        </li>
                    }
                </ul>
            </td>
            <td>
                <div class="btn-group">
                    @if (item.Host != ViewBag.CurrentPlayer)
                    {
                        //ToDO : FIx the linq to return bool
                        var isNotInTheEvent = item.Teams.Any(e => e.Players.Contains(ViewBag.CurrentPlayer));
                        if (!isNotInTheEvent)
                        {
                            @Html.ActionLink("Join event", "JoinEvent", new { id = item.EventId }, new { @class = "btn btn-default" })
                            @Html.ActionLink("Details", "Details", new { id = item.EventId }, new { @class = "btn btn-default" })
                        }
                        else
                        {
                            @Html.ActionLink("Leave event", "LeaveEvent", new { id = item.EventId }, new { @class = "btn btn-default" })
                            @Html.ActionLink("Details", "Details", new { id = item.EventId }, new { @class = "btn btn-default" })
                        }
                    }
                    else
                    {
                        @Html.ActionLink("Edit", "Edit", new { id = item.EventId }, new { @class = "btn btn-default" })
                        @Html.ActionLink("Details", "Details", new { id = item.EventId }, new { @class = "btn btn-default" })
                        @Html.ActionLink("Delete", "Delete", new { id = item.EventId }, new { @class = "btn btn-default" })
                    }
                    
                </div>
            </td>
            <td>
                @Html.ActionLink("Show matches", "EventMatches", new { id = item.EventId }, new { @class = "btn btn-default" })
            </td>
        </tr>
    }

</table>

<div>
    @Html.ActionLink("Back to List", "Index", "Home", null, new { @class = "btn btn-default" })
</div>
